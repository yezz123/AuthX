[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authx"
description = "Ready to use and customizable Authentications and Oauth2 management for FastAPI"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "FastAPI",
    "Authentication",
    "Oauth2",
    "Pydantic",
    "JWT",
    "Cookie"
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    # Update the following list as the project matures
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "fastapi >=0.100.0,<0.120.0",
    "pyjwt[crypto] >=2.6.0,<3.0.0",
    "pydantic >=2.0.0,<3.0.0",
    "pydantic-settings >=2.1.0",
    "python-dateutil>=2.8,<3.0.0",
    "pytz>=2023.3,<2025.0",
    "python-jose>=3.3.0,<4.0.0",
]

dynamic = ["version"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/yezz123/authx"
Documentation = "https://authx.yezz.me/"
Funding = 'https://github.com/sponsors/yezz123'


[tool.hatch.version]
path = "authx/__init__.py"


[tool.ruff.lint]
mccabe = { max-complexity = 14 }
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B018",  # Found useless expression.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"authx/token.py" = ["C901"]
"authx/main.py" = ["B008"]
"tests/utils.py" = ["B008"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "typing_extensions", "sqlalchemy"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.run]
source = ["authx"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    'authx/',
    '/Users/runner/work/authx/authx/authx/',
    'D:\a\authx\authx\authx',
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
    'if CASUAL_UT',
]


[tool.mypy]
strict = true
plugins = 'pydantic.mypy'


[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]
