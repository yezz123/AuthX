[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authx"
description = "Ready to use and customizable Authentications and Oauth2 management for FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "FastAPI",
    "Authentication",
    "Oauth2",
    "Pydantic",
    "JWT",
    "Cookie"
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    # Update the following list as the project matures
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "fastapi >=0.65.2,<0.96.0",
    "starlette >=0.14.02,<0.27.1",
    "pyjwt[crypto] >=2.6.0,<3.0.0",
    "pydantic >=1.7.4,!=1.8,!=1.8.1,<2.0.0",
    "typing-extensions >=3.7.4,<4.7.0",
]

dynamic = ["version"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/yezz123/authx"
Documentation = "https://authx.yezz.me/"
Funding = 'https://github.com/sponsors/yezz123'

[project.optional-dependencies]
profiler = [
    "pyinstrument >=4.1.1,<4.5.0",
]
oauth2 = [
    "python-jose >=3.3.0,<4.0.0",
]
metrics = [
    "prometheus-client >=0.16.0,<1.0.0",
]
session = [
    "redis >=4.3.3,<4.5.6",
]
cache = [
    "python-dateutil==2.8.2",
    "redis >=4.3.3,<4.5.6",
    "pytz==2023.3",
]
lint = [
    "pre-commit==3.3.2",
    "mypy==1.3.0",
]
test = [
    "pytest==7.3.1",
    "pytest-asyncio == 0.21.0",
    "pytest-cov==4.1.0",
    "httpx==0.24.1",
    "requests==2.31.0",
    "SQLAlchemy ==2.0.15",
    "itsdangerous == 2.1.2",
    "websockets==11.0.3",
    "uvicorn==0.22.0",
    "uvloop==0.17.0"
]
docs = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.1.4,<10.0.0",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "mkdocs-mermaid2-plugin==0.6.0",
    "markdown-include==0.8.1",
    "pymdown-extensions==10.0.1",
    "jinja2==3.1.2"
]

[tool.hatch.version]
path = "authx/__init__.py"


[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true

[tool.isort]
profile = "black"
known_third_party = ["pydantic", "sqlalchemy", "typing_extensions"]
line_length = 120
known_first_party = "pydantic"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

[tool.ruff]
line-length = 120
mccabe = { max-complexity = 14 }
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "F811",  # redefinition of unused
    "B018",  # Found useless expression.
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic", "typing_extensions"]

[tool.coverage.run]
source = ["authx"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    "authx/",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
]

[tool.mypy]
exclude = 'authx/__init__.py'
plugins = 'pydantic.mypy'
python_version = '3.11'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = [
    'dotenv.*',
]
ignore_missing_imports = true


[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]
