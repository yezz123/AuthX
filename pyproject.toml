[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "authx"
description = "Ready to use and customizable Authentications and Oauth2 management for FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Typing :: Typed",
]

dependencies = [
    "fastapi >=0.65.2,<0.93.0",
    "passlib ==1.7.4",
    "bcrypt ==4.0.1",
    "email-validator >=1.1.0,<1.3.2",
    "pyjwt ==2.6.0",
    "cryptography==39.0.1",
    "httpx==0.23.3",
    "itsdangerous == 2.1.2",
    "aiosmtplib == 2.0.1",
    "pydantic==1.10.5",
    "databases == 0.7.0",
    "motor == 3.1.1",
    "Authlib==0.15.5",
    "starlette >=0.14.02,<0.25.1",
    "redis >=4.3.3,<4.5.2",
    "pytz==2022.7.1",
    "python-dateutil==2.8.2",
    "python-socketio >=4.6.0,<5.7.3",
    "pyinstrument >=4.1.1,<4.5.0",
    "SQLAlchemy >=1.4.37,<2.0.4",
    "prometheus-client",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/yezz123/authx"
Documentation = "https://authx.yezz.me/"
Funding = 'https://github.com/sponsors/yezz123'

[project.optional-dependencies]
lint = [
    "pre-commit==3.0.4",
]
test = [
    "pytest==7.2.1",
    "pytest-asyncio == 0.20.3",
    "requests==2.28.2",
    "uvicorn==0.20.0",
    "asynctest==0.13.0",
    "codecov==2.1.12",
    "pytest-cov==4.0.0",
    "websockets==10.4",
    "uvloop==0.17.0"
]
docs = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.1.4,<10.0.0",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "mkdocs-mermaid2-plugin==0.6.0",
    "markdown-include==0.8.1",
    "pymdown-extensions==9.9.2",
    "jinja2==3.1.2"
]

[tool.hatch.version]
path = "authx/__init__.py"


[tool.isort]
profile = "black"
known_third_party = ["pydantic", "sqlalchemy", "typing_extensions"]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "F811",  # redefinition of unused
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["pydantic", "sqlalchemy", "typing_extensions"]

[tool.coverage.run]
parallel = true
source = [
    "tests",
    "authx"
]
context = '${CONTEXT}'
omit = [
    "authx/core/config.py",
    "authx/main.py",
    "authx/utils/**",
    "authx/errors/**",
    "authx/database/**",
    "authx/cache/**",
    "authx/services/**",
    "tests/middleware/example/**"
]


[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise NotImplemented",
    "@overload",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
]

[tool.pytest]
testpaths = "tests/"
log_cli = "1"
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
